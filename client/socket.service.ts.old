import * as io from "socket.io-client";
import * as P2P from "socket.io-p2p";
import { LogInCreds, RegisterCreds } from "../gamma/account/types";

export class SocketService {
	socket: SocketIOClient.Socket = io("http://localhost:8000");
	p2p = new P2P(this.socket);

	initialize() {
		this.p2p.on("ready", function () {

		})
	}

	logIn(creds: LogInCreds) {
		this.socket.emit("login request", creds);
	}

	register(creds: RegisterCreds) {
		this.socket.emit("register request", creds);
	}

	joinRoom(room: string, authToken: string) {
		this.p2p.usePeerConnection = true;
		this.p2p.emit("peer-obj", { peerId: this.p2p.peerId });

		this.socket.emit("room join request", {
			room: room,
			authToken: authToken
		});
	}

	sendMessage(room: string, message: string) {
		this.p2p.emit("message send", {
			room: room,
			message: message
		});
	}
}